version: '2.1'
services:

    postgres:
        image: postgres:11
        networks:
            - production
        environment:
            POSTGRES_USER: ${PG_USERNAME}
            POSTGRES_PASSWORD: ${PG_PASSWORD}
            POSTGRES_DB: ${PG_DATABASE}
        volumes:
            - ${HUMBLE_DATA}/pg:/var/lib/postgresql/data
            - ${HUMBLE_BACKUP}:/backup
        restart: always

    webapp:
        build:
            context: ./services/webapp
            dockerfile: Dockerfile
            args:
                REACT_APP_NAME: ${REACT_APP_NAME}
        depends_on:
            - postgres
        networks:
            - production
        ports:
            - ${SERVER_PORT}:8080
        environment:
            NODE_ENV: production
            BABEL_ENV: ${BABEL_ENV}
            LOG_LEVEL: ${LOG_LEVEL}
            APP_NAME: ${APP_NAME}
            APP_ID: ${APP_ID}
            PG_HOST: postgres
            PG_PORT: 5432
            PG_DATABASE: ${PG_DATABASE}
            PG_USERNAME: ${PG_USERNAME}
            PG_PASSWORD: ${PG_PASSWORD}
            PG_MAX_CONN_ATTEMPTS: ${PG_MAX_CONN_ATTEMPTS}
            PG_CONN_ATTEMPTS_DELAY: ${PG_CONN_ATTEMPTS_DELAY}
            SERVER_PORT: ${SERVER_PORT}
            BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
            JWT_SECRET: ${JWT_SECRET}
            JWT_DURATION: ${JWT_DURATION}
            LOGIN_DURATION: ${LOGIN_DURATION}
            GRAPHQL_TEST_TOKEN: ${GRAPHQL_TEST_TOKEN}
            GRAPHQL_MOUNT_POINT: ${GRAPHQL_MOUNT_POINT}
            REACT_SSR: ${REACT_SSR}
            REACT_SSR_ENABLED: ${REACT_SSR_ENABLED}
            REACT_SSR_USE_CACHE: ${REACT_SSR_USE_CACHE}
        restart: always

networks:
    production:
